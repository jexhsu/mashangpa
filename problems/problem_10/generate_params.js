function n(_0x4968e1, _0x1093ec, _0x4c5f59, _0x474b35, _0x353c24, _0xc168b9, _0x46b192) {
    return (
        (_0x4968e1 = h(_0x4968e1, h(h(_0x4c5f59 ^ (_0x1093ec | ~_0x474b35), _0x353c24), _0x46b192))),
        h((_0x4968e1 << _0xc168b9) | (_0x4968e1 >>> (32 - _0xc168b9)), _0x1093ec)
    );
}
function m(_0x130849, _0x4b0430, _0x4ba0ed, _0x4e52aa, _0x25e079, _0x56e69f, _0x40ef4c) {
    return (
        (_0x130849 = h(_0x130849, h(h(_0x4b0430 ^ _0x4ba0ed ^ _0x4e52aa, _0x25e079), _0x40ef4c))),
        h((_0x130849 << _0x56e69f) | (_0x130849 >>> (32 - _0x56e69f)), _0x4b0430)
    );
}
function l(_0x4fcfd0, _0x791862, _0x545c62, _0x492884, _0x1b9409, _0x4f627e, _0x4c98ec) {
    return (
        (_0x4fcfd0 = h(_0x4fcfd0, h(h((_0x791862 & _0x492884) | (_0x545c62 & ~_0x492884), _0x1b9409), _0x4c98ec))),
        h((_0x4fcfd0 << _0x4f627e) | (_0x4fcfd0 >>> (32 - _0x4f627e)), _0x791862)
    );
}
function h(_0x26b5cf, _0x41a4dc) {
    var _0x27bd6f, _0x56c5bf, _0x1d88bb, _0x1629f5, _0x5ad387;
    _0x1d88bb = _0x26b5cf & 2147483648;
    _0x1629f5 = _0x41a4dc & 2147483648;
    _0x27bd6f = _0x26b5cf & 1073741824;
    _0x56c5bf = _0x41a4dc & 1073741824;
    _0x5ad387 = (_0x26b5cf & 1073741823) + (_0x41a4dc & 1073741823);
    return _0x27bd6f & _0x56c5bf
        ? _0x5ad387 ^ 2147483648 ^ _0x1d88bb ^ _0x1629f5
        : _0x27bd6f | _0x56c5bf
        ? _0x5ad387 & 1073741824
            ? _0x5ad387 ^ 3221225472 ^ _0x1d88bb ^ _0x1629f5
            : _0x5ad387 ^ 1073741824 ^ _0x1d88bb ^ _0x1629f5
        : _0x5ad387 ^ _0x1d88bb ^ _0x1629f5;
}
function k(_0x1f8a75, _0x4a3bd3, _0x5a3070, _0x25f36f, _0x4a9473, _0x451bed, _0x437fcb) {
    return (
        (_0x1f8a75 = h(_0x1f8a75, h(h((_0x4a3bd3 & _0x5a3070) | (~_0x4a3bd3 & _0x25f36f), _0x4a9473), _0x437fcb))),
        h((_0x1f8a75 << _0x451bed) | (_0x1f8a75 >>> (32 - _0x451bed)), _0x4a3bd3)
    );
}
function xooo(_0xbece56) {
    function _0x50a213(_0x47e4e0) {
        var _0x4a8091 = "",
            _0x32f23e = "",
            _0x1a2975;
        for (_0x1a2975 = 0; 3 >= _0x1a2975; _0x1a2975++) {
            _0x32f23e = (_0x47e4e0 >>> (8 * _0x1a2975)) & 255;
            _0x32f23e = "0" + _0x32f23e.toString(16);
            _0x4a8091 += _0x32f23e.substr(_0x32f23e.length - 2, 2);
        }
        return _0x4a8091;
    }
    var _0x1b8333 = [],
        _0x28207d,
        _0x383438,
        _0x11fccf,
        _0x3ce4d1,
        _0x452f67,
        _0x20d302,
        _0x3a8a59,
        _0x58cff2;
    _0xbece56 = (function (_0x1a1913) {
        _0x1a1913 = _0x1a1913.replace(/\\r\\n/g, "\\n");
        for (var _0x34d0f0 = "", _0x52db02 = 0; _0x52db02 < _0x1a1913.length; _0x52db02++) {
            var _0x23313b = _0x1a1913.charCodeAt(_0x52db02);
            128 > _0x23313b
                ? (_0x34d0f0 += String.fromCharCode(_0x23313b))
                : (127 < _0x23313b && 2048 > _0x23313b
                      ? (_0x34d0f0 += String.fromCharCode((_0x23313b >> 6) | 192))
                      : ((_0x34d0f0 += String.fromCharCode((_0x23313b >> 12) | 224)),
                        (_0x34d0f0 += String.fromCharCode(((_0x23313b >> 6) & 63) | 128))),
                  (_0x34d0f0 += String.fromCharCode((_0x23313b & 63) | 128)));
        }
        return _0x34d0f0;
    })(_0xbece56);
    _0x1b8333 = (function (_0x857796) {
        var _0x1608a4,
            _0x7de62 = _0x857796.length;
        _0x1608a4 = _0x7de62 + 8;
        for (
            var _0x1b0bcd = 16 * ((_0x1608a4 - (_0x1608a4 % 64)) / 64 + 1),
                _0x26393 = Array(_0x1b0bcd - 1),
                _0x5e2c4a = 0,
                _0x5038ff = 0;
            _0x5038ff < _0x7de62;

        ) {
            _0x1608a4 = (_0x5038ff - (_0x5038ff % 4)) / 4;
            _0x5e2c4a = (_0x5038ff % 4) * 8;
            _0x26393[_0x1608a4] |= _0x857796.charCodeAt(_0x5038ff) << _0x5e2c4a;
            _0x5038ff++;
        }
        _0x1608a4 = (_0x5038ff - (_0x5038ff % 4)) / 4;
        _0x26393[_0x1608a4] |= 128 << ((_0x5038ff % 4) * 8);
        _0x26393[_0x1b0bcd - 2] = _0x7de62 << 3;
        _0x26393[_0x1b0bcd - 1] = _0x7de62 >>> 29;
        return _0x26393;
    })(_0xbece56);
    _0x452f67 = 271733878;
    _0x20d302 = 2562383102;
    _0x3a8a59 = 4023233417;
    _0x58cff2 = 1732584193;
    for (_0xbece56 = 0; _0xbece56 < _0x1b8333.length; _0xbece56 += 16) {
        _0x28207d = _0x452f67;
        _0x383438 = _0x20d302;
        _0x11fccf = _0x3a8a59;
        _0x3ce4d1 = _0x58cff2;
        _0x452f67 = k(_0x452f67, _0x20d302, _0x3a8a59, _0x58cff2, _0x1b8333[_0xbece56 + 0], 7, 3614090360);
        _0x58cff2 = k(_0x58cff2, _0x452f67, _0x20d302, _0x3a8a59, _0x1b8333[_0xbece56 + 1], 12, 3905402710);
        _0x3a8a59 = k(_0x3a8a59, _0x58cff2, _0x452f67, _0x20d302, _0x1b8333[_0xbece56 + 2], 17, 606105819);
        _0x20d302 = k(_0x20d302, _0x3a8a59, _0x58cff2, _0x452f67, _0x1b8333[_0xbece56 + 3], 22, 3250441966);
        _0x452f67 = k(_0x452f67, _0x20d302, _0x3a8a59, _0x58cff2, _0x1b8333[_0xbece56 + 4], 7, 4118548399);
        _0x58cff2 = k(_0x58cff2, _0x452f67, _0x20d302, _0x3a8a59, _0x1b8333[_0xbece56 + 5], 12, 1200080426);
        _0x3a8a59 = k(_0x3a8a59, _0x58cff2, _0x452f67, _0x20d302, _0x1b8333[_0xbece56 + 6], 17, 2821735955);
        _0x20d302 = k(_0x20d302, _0x3a8a59, _0x58cff2, _0x452f67, _0x1b8333[_0xbece56 + 7], 22, 4249261313);
        _0x452f67 = k(_0x452f67, _0x20d302, _0x3a8a59, _0x58cff2, _0x1b8333[_0xbece56 + 8], 7, 1770035416);
        _0x58cff2 = k(_0x58cff2, _0x452f67, _0x20d302, _0x3a8a59, _0x1b8333[_0xbece56 + 9], 12, 2336552879);
        _0x3a8a59 = k(_0x3a8a59, _0x58cff2, _0x452f67, _0x20d302, _0x1b8333[_0xbece56 + 10], 17, 4294925233);
        _0x20d302 = k(_0x20d302, _0x3a8a59, _0x58cff2, _0x452f67, _0x1b8333[_0xbece56 + 11], 22, 2304563134);
        _0x452f67 = k(_0x452f67, _0x20d302, _0x3a8a59, _0x58cff2, _0x1b8333[_0xbece56 + 12], 7, 1804603682);
        _0x58cff2 = k(_0x58cff2, _0x452f67, _0x20d302, _0x3a8a59, _0x1b8333[_0xbece56 + 13], 12, 4254626195);
        _0x3a8a59 = k(_0x3a8a59, _0x58cff2, _0x452f67, _0x20d302, _0x1b8333[_0xbece56 + 14], 17, 2792965006);
        _0x20d302 = k(_0x20d302, _0x3a8a59, _0x58cff2, _0x452f67, _0x1b8333[_0xbece56 + 15], 22, 1236535329);
        _0x452f67 = l(_0x452f67, _0x20d302, _0x3a8a59, _0x58cff2, _0x1b8333[_0xbece56 + 1], 5, 4129170786);
        _0x58cff2 = l(_0x58cff2, _0x452f67, _0x20d302, _0x3a8a59, _0x1b8333[_0xbece56 + 6], 9, 3225465664);
        _0x3a8a59 = l(_0x3a8a59, _0x58cff2, _0x452f67, _0x20d302, _0x1b8333[_0xbece56 + 11], 14, 643717713);
        _0x20d302 = l(_0x20d302, _0x3a8a59, _0x58cff2, _0x452f67, _0x1b8333[_0xbece56 + 0], 20, 3921069994);
        _0x452f67 = l(_0x452f67, _0x20d302, _0x3a8a59, _0x58cff2, _0x1b8333[_0xbece56 + 5], 5, 3593408605);
        _0x58cff2 = l(_0x58cff2, _0x452f67, _0x20d302, _0x3a8a59, _0x1b8333[_0xbece56 + 10], 9, 38016083);
        _0x3a8a59 = l(_0x3a8a59, _0x58cff2, _0x452f67, _0x20d302, _0x1b8333[_0xbece56 + 15], 14, 3634488961);
        _0x20d302 = l(_0x20d302, _0x3a8a59, _0x58cff2, _0x452f67, _0x1b8333[_0xbece56 + 4], 20, 3889429448);
        _0x452f67 = l(_0x452f67, _0x20d302, _0x3a8a59, _0x58cff2, _0x1b8333[_0xbece56 + 9], 5, 568446438);
        _0x58cff2 = l(_0x58cff2, _0x452f67, _0x20d302, _0x3a8a59, _0x1b8333[_0xbece56 + 14], 9, 3275163606);
        _0x3a8a59 = l(_0x3a8a59, _0x58cff2, _0x452f67, _0x20d302, _0x1b8333[_0xbece56 + 3], 14, 4107603335);
        _0x20d302 = l(_0x20d302, _0x3a8a59, _0x58cff2, _0x452f67, _0x1b8333[_0xbece56 + 8], 20, 1163531501);
        _0x452f67 = l(_0x452f67, _0x20d302, _0x3a8a59, _0x58cff2, _0x1b8333[_0xbece56 + 13], 5, 2850285829);
        _0x58cff2 = l(_0x58cff2, _0x452f67, _0x20d302, _0x3a8a59, _0x1b8333[_0xbece56 + 2], 9, 4243563512);
        _0x3a8a59 = l(_0x3a8a59, _0x58cff2, _0x452f67, _0x20d302, _0x1b8333[_0xbece56 + 7], 14, 1735328473);
        _0x20d302 = l(_0x20d302, _0x3a8a59, _0x58cff2, _0x452f67, _0x1b8333[_0xbece56 + 12], 20, 2368359562);
        _0x452f67 = m(_0x452f67, _0x20d302, _0x3a8a59, _0x58cff2, _0x1b8333[_0xbece56 + 5], 4, 4294588738);
        _0x58cff2 = m(_0x58cff2, _0x452f67, _0x20d302, _0x3a8a59, _0x1b8333[_0xbece56 + 8], 11, 2272392833);
        _0x3a8a59 = m(_0x3a8a59, _0x58cff2, _0x452f67, _0x20d302, _0x1b8333[_0xbece56 + 11], 16, 1839030562);
        _0x20d302 = m(_0x20d302, _0x3a8a59, _0x58cff2, _0x452f67, _0x1b8333[_0xbece56 + 14], 23, 4259657740);
        _0x452f67 = m(_0x452f67, _0x20d302, _0x3a8a59, _0x58cff2, _0x1b8333[_0xbece56 + 1], 4, 2763975236);
        _0x58cff2 = m(_0x58cff2, _0x452f67, _0x20d302, _0x3a8a59, _0x1b8333[_0xbece56 + 4], 11, 1272893353);
        _0x3a8a59 = m(_0x3a8a59, _0x58cff2, _0x452f67, _0x20d302, _0x1b8333[_0xbece56 + 7], 16, 4139469664);
        _0x20d302 = m(_0x20d302, _0x3a8a59, _0x58cff2, _0x452f67, _0x1b8333[_0xbece56 + 10], 23, 3200236656);
        _0x452f67 = m(_0x452f67, _0x20d302, _0x3a8a59, _0x58cff2, _0x1b8333[_0xbece56 + 13], 4, 681279174);
        _0x58cff2 = m(_0x58cff2, _0x452f67, _0x20d302, _0x3a8a59, _0x1b8333[_0xbece56 + 0], 11, 3936430074);
        _0x3a8a59 = m(_0x3a8a59, _0x58cff2, _0x452f67, _0x20d302, _0x1b8333[_0xbece56 + 3], 16, 3572445317);
        _0x20d302 = m(_0x20d302, _0x3a8a59, _0x58cff2, _0x452f67, _0x1b8333[_0xbece56 + 6], 23, 76029189);
        _0x452f67 = m(_0x452f67, _0x20d302, _0x3a8a59, _0x58cff2, _0x1b8333[_0xbece56 + 9], 4, 3654602809);
        _0x58cff2 = m(_0x58cff2, _0x452f67, _0x20d302, _0x3a8a59, _0x1b8333[_0xbece56 + 12], 11, 3873151461);
        _0x3a8a59 = m(_0x3a8a59, _0x58cff2, _0x452f67, _0x20d302, _0x1b8333[_0xbece56 + 15], 16, 530742520);
        _0x20d302 = m(_0x20d302, _0x3a8a59, _0x58cff2, _0x452f67, _0x1b8333[_0xbece56 + 2], 23, 3299628645);
        _0x452f67 = n(_0x452f67, _0x20d302, _0x3a8a59, _0x58cff2, _0x1b8333[_0xbece56 + 0], 6, 4096336452);
        _0x58cff2 = n(_0x58cff2, _0x452f67, _0x20d302, _0x3a8a59, _0x1b8333[_0xbece56 + 7], 10, 1126891415);
        _0x3a8a59 = n(_0x3a8a59, _0x58cff2, _0x452f67, _0x20d302, _0x1b8333[_0xbece56 + 14], 15, 2878612391);
        _0x20d302 = n(_0x20d302, _0x3a8a59, _0x58cff2, _0x452f67, _0x1b8333[_0xbece56 + 5], 21, 4237533241);
        _0x452f67 = n(_0x452f67, _0x20d302, _0x3a8a59, _0x58cff2, _0x1b8333[_0xbece56 + 12], 6, 1700485571);
        _0x58cff2 = n(_0x58cff2, _0x452f67, _0x20d302, _0x3a8a59, _0x1b8333[_0xbece56 + 3], 10, 2399980690);
        _0x3a8a59 = n(_0x3a8a59, _0x58cff2, _0x452f67, _0x20d302, _0x1b8333[_0xbece56 + 10], 15, 4293915773);
        _0x20d302 = n(_0x20d302, _0x3a8a59, _0x58cff2, _0x452f67, _0x1b8333[_0xbece56 + 1], 21, 2240044497);
        _0x452f67 = n(_0x452f67, _0x20d302, _0x3a8a59, _0x58cff2, _0x1b8333[_0xbece56 + 8], 6, 1873313359);
        _0x58cff2 = n(_0x58cff2, _0x452f67, _0x20d302, _0x3a8a59, _0x1b8333[_0xbece56 + 15], 10, 4264355552);
        _0x3a8a59 = n(_0x3a8a59, _0x58cff2, _0x452f67, _0x20d302, _0x1b8333[_0xbece56 + 6], 15, 2734768916);
        _0x20d302 = n(_0x20d302, _0x3a8a59, _0x58cff2, _0x452f67, _0x1b8333[_0xbece56 + 13], 21, 1309151649);
        _0x452f67 = n(_0x452f67, _0x20d302, _0x3a8a59, _0x58cff2, _0x1b8333[_0xbece56 + 4], 6, 4149444226);
        _0x58cff2 = n(_0x58cff2, _0x452f67, _0x20d302, _0x3a8a59, _0x1b8333[_0xbece56 + 11], 10, 3174756917);
        _0x3a8a59 = n(_0x3a8a59, _0x58cff2, _0x452f67, _0x20d302, _0x1b8333[_0xbece56 + 2], 15, 718787259);
        _0x20d302 = n(_0x20d302, _0x3a8a59, _0x58cff2, _0x452f67, _0x1b8333[_0xbece56 + 9], 21, 3951481745);
        _0x452f67 = h(_0x452f67, _0x28207d);
        _0x20d302 = h(_0x20d302, _0x383438);
        _0x3a8a59 = h(_0x3a8a59, _0x11fccf);
        _0x58cff2 = h(_0x58cff2, _0x3ce4d1);
    }
    return (_0x50a213(_0x452f67) + _0x50a213(_0x20d302) + _0x50a213(_0x3a8a59) + _0x50a213(_0x58cff2)).toLowerCase();
}
const sha256 = require("js-sha256").sha256;
function hoo(_0xc82e03, _0x164dc2) {
    return sha256(_0xc82e03);
}
function OOXX(_0x1d2b77, _0x414680, _0x3c906f, _0x3dc595, _0xe29e0c) {
    let _0x57722c = [98, 115, 98, 115, 98, 115, 98, 115, 98, 108],
        _0x315d43 = [];
    for (let _0x512ce5 = 0; _0x512ce5 < _0x57722c.length; _0x512ce5++) {
        _0x315d43.push(String.fromCharCode(_0x57722c[_0x512ce5]));
    }
    return _0x315d43.join("|");
}
function xoo(_0x6672e7, _0xba1572) {
    return hoo(_0x6672e7(_0xba1572));
}
function xo(_0x272163, _0x47ff07) {
    return _0x272163 + _0x47ff07;
}
function OOxx() {}
function OOOO(_0x58d4b1, _0x19e7b0, _0x19c60c, _0x21036e, _0x19a1bf) {
    let _0x418c3c = OOXX();
    return xoo(xooo, xo(_0x58d4b1, _0x418c3c));
}

function generateParams(url) {
    t = OOOO(url);
    return { t };
}
const urlArg = process.argv[2];
(function main(url) {
    const params = generateParams(url);
    console.log(JSON.stringify(params));
})(urlArg);
